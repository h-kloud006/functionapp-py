# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none
variables:
     # Agent VM image name
    vmImageName: 'ubuntu-latest'


pool:
  vmImage: $(vmImageName)

resources:
- repo: self

stages:
  - stage: Build
    jobs:
    - job: Build
      displayName:  Build stage
      steps:
       - task: UsePythonVersion@0
         displayName: "Setting Python version to 3.7 as required by functions"
         inputs:
            versionSpec: '3.7'
            architecture: 'x64'
       - bash: |
          if [ -f extensions.csproj ]
          then
              dotnet build ext                                                                            ensions.csproj --output ./bin
          fi
          pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
       - task: ArchiveFiles@2
         displayName: "Archive files"
         inputs:
            rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
            includeRootFolder: false
            archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
       - task: PublishBuildArtifacts@1
         inputs:
            PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
            artifactName: 'drop'
  

  - stage: DEV
    dependsOn: Build
    jobs:
    - deployment: Approval_Task
      displayName: Prod_deployment
      environment: Approval
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureFunctionApp@1
              displayName: Deploy to dev
              inputs:
                azureSubscription: 'cicd-sp'
                appType: 'functionAppLinux'
                appName: 'testhrfapp'
                package:  '$(Pipeline.Workspace)/drop/build$(Build.BuildId).zip'
                #$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip
               #runtimeStack: 'PYTHON|3.9'